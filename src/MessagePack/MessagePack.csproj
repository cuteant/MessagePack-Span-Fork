<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\version.props" />
  <Import Project="..\nuget.props" />

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net471;net451</TargetFrameworks>
    <RootNamespace>MessagePack</RootNamespace>
    <AssemblyName>MessagePack</AssemblyName>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <DefineConstants>$(DefineConstants);ENABLE_UNSAFE_MSGPACK;</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Label="NuGet">
    <PackageId>MessagePack.Unofficial</PackageId>
    <Title>MessagePack for C# (Unofficial).</Title>
    <Description>This package includes a mostly complete port of the MessagePack(for more info see: https://github.com/neuecc/MessagePack-CSharp/) assembly to support .NET 4.0 and newer.

These types can serialize by default:
System.Delegate
System.Type
System.Globalization.CultureInfo
System.Net.IPAddress
System.Net.IPEndPoint
System.Reflection.ConstructorInfo
System.Reflection.EventInfo
System.Reflection.FieldInfo
System.Reflection.MemberInfo
System.Reflection.MethodInfo
System.Reflection.PropertyInfo
System.Linq.Expressions.*
    </Description>
    <PackageTags>MsgPack, MessagePack, Serialization, Formatter, Serializer, Unity, Xamarin</PackageTags>
  </PropertyGroup>

  <ItemGroup Condition=" '$(ImportLibs)' == 'netfx' ">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CuteAnt.Core" Version="$(CuteAntCorePackageVersion)" />
    <PackageReference Include="System.Buffers" Version="$(SystemBuffersPackageVersion)" />
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="$(SystemThreadingTasksExtensionsPackageVersion)" />
    <PackageReference Include="System.ValueTuple" Version="$(SystemValueTuplePackageVersion)" />
  </ItemGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <PackageReference Include="System.Reflection.Emit" Version="$(SystemReflectionEmitPackageVersion)" />
    <PackageReference Include="System.Reflection.Emit.Lightweight" Version="$(SystemReflectionEmitLightweightPackageVersion)" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="$(SystemRuntimeCompilerServicesUnsafePackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MessagePack.Abstractions\MessagePack.Abstractions.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="*.meta" />
    <None Remove="Resolvers\*.meta" />
    <None Remove="Internal\*.meta" />
    <None Remove="Formatters\*.meta" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Formatters\ForceSizePrimitiveFormatter.tt">
      <LastGenOutput>ForceSizePrimitiveFormatter.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Formatters\PrimitiveFormatter.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PrimitiveFormatter.cs</LastGenOutput>
    </None>
    <None Update="Formatters\TupleFormatter.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>TupleFormatter.cs</LastGenOutput>
    </None>
    <None Update="Formatters\ValueTupleFormatter.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ValueTupleFormatter.cs</LastGenOutput>
    </None>
    <None Update="Internal\UnsafeMemory.tt">
      <LastGenOutput>UnsafeMemory.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Formatters\ForceSizePrimitiveFormatter.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ForceSizePrimitiveFormatter.tt</DependentUpon>
    </Compile>
    <Compile Update="Formatters\PrimitiveFormatter.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>PrimitiveFormatter.tt</DependentUpon>
    </Compile>
    <Compile Update="Formatters\TupleFormatter.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TupleFormatter.tt</DependentUpon>
    </Compile>
    <Compile Update="Formatters\ValueTupleFormatter.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ValueTupleFormatter.tt</DependentUpon>
    </Compile>
    <Compile Update="Internal\Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
    <Compile Update="Internal\UnsafeMemory.cs">
      <DependentUpon>UnsafeMemory.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Internal\Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
</Project>